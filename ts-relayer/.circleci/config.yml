version: 2.1

jobs:
  build:
    docker:
      - image: cimg/node:18.18
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - ~/.cache/yarn
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn build
      - run: yarn test:lint
      - run: yarn test:prettier

  changeset-validation:
    docker:
      - image: cimg/node:18.18
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
      - run:
          name: Validate changeset
          command: yarn changeset status

  publish-main-tag:
    docker:
      - image: cimg/node:18.18
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
      - run:
          name: Build
          command: yarn build
      - run:
          name: Set version
          command: yarn version --no-git-tag-version --new-version 0.0.0-main-$(echo $CIRCLE_SHA1 | cut -c -7)
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - run: npm publish --tag main

  test:
    machine:
      # We can't use a containerized environment since it requires remote docker to start custom containers.
      # However, we can't access the remote docker's network from the primary container. This is a
      # feature, as documented in https://circleci.com/docs/2.0/building-docker-images/#separation-of-environments
      # As a consequence, we cannot use the circleci CLI for this job because "You cannot use the machine
      # executor in local jobs." (https://circleci.com/docs/2.0/local-cli/#limitations-of-running-jobs-locally)
      #
      # Available images: https://circleci.com/docs/2.0/configuration-reference/#available-machine-images
      image: ubuntu-2004:2024.01.1
    steps:
      - checkout
      - run:
          # TODO: check if still needed with 20.04
          # The images ubuntu-1604 comes with preinstalled nvm, which does not work well with non-login shells
          # We do this before running other scripts in parallel to avoid trouble when starting bash sessions.
          name: Uninstall nvm
          # Moving to trash is faster than deleting (gvfs-trash is not installed on this image)
          command: mkdir -p ~/.local/share/Trash && mv "$NVM_DIR" ~/.npm ~/.local/share/Trash
      - run: # start early for less wait time below
          name: Start osmosisd
          command: ./scripts/osmosis/start.sh
          background: true
      - run: # start early for less wait time below
          name: Start wasmd
          command: ./scripts/wasmd/start.sh
          background: true
      - run: # start early for less wait time below
          name: Start gaiad
          command: ./scripts/gaia/start.sh
          background: true
      - run:
          name: Install nodejs
          # In the current image, `sudo apt install nodejs` requires `sudo apt update` which is too slow
          command: |
            curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
      - run:
          name: Install yarn
          command: |
            sudo npm install --global yarn
      - run:
          name: Version information
          command: echo "node $(node --version)"; echo "yarn $(yarn --version)"
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules
      - run:
          name: Wait for chains to start up
          command: |
            echo "Wait for wasmd..."
            timeout 60 bash -c "until curl -s http://localhost:26659/status > /dev/null; do sleep 0.5; done"
            echo "Wait for gaia..."
            timeout 60 bash -c "until curl -s http://localhost:26655/status > /dev/null; do sleep 0.5; done"
            echo "Wait for osmosis..."
            timeout 60 bash -c "until curl -s http://localhost:26653/status > /dev/null; do sleep 0.5; done"
            sleep 1
            echo "Chains up and running!"
      - run:
          command: yarn test
      - run:
          name: Stop chains
          command: |
            ./scripts/wasmd/stop.sh
            ./scripts/gaia/stop.sh
            ./scripts/osmosis/stop.sh

workflows:
  version: 2
  build:
    jobs:
      - build
      - test
      - changeset-validation:
          requires:
            - build
          filters:
            branches:
              ignore: main
      # This stopped working after 3b30964 (2022-09-19). It can probably be restored
      # by fixing the npm access token.
      # - publish-main-tag:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: main
